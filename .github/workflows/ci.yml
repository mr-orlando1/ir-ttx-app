name: "CI Pipeline"
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  pytest:
    name: Backend Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install test tools
        run: pip install pytest
      - name: Run PyTest
        run: pytest tests/ --maxfail=1 --disable-warnings -q
  cypress:
    name: Cypress E2E Tests
    runs-on: ubuntu-latest
    needs: pytest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm ci --prefix frontend
      - name: Start App
        run: npm start --prefix frontend &
      - name: Wait for App
        uses: jakejarvis/wait-action@v0.1.3
        with:
          url: http://localhost:3000
          timeout: '60'
      - name: Run Cypress
        run: npm run cy:run
  accessibility:
    name: Accessibility Audit
    runs-on: ubuntu-latest
    needs: cypress
    steps:
      - uses: actions/checkout@v3
      - name: Install Pa11y
        run: npm install -g pa11y
      - name: Run Accessibility Audit
        run: pa11y http://localhost:3000 --reporter cli
  performance:
    name: Performance Audit
    runs-on: ubuntu-latest
    needs: accessibility
    steps:
      - uses: actions/checkout@v3
      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.7.x
      - name: Run Lighthouse CI
        run: lhci autorun --upload.target=temporary-public-storage
  container_scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker image
        run: docker build -t ir-ttx-app:ci .
      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@v0.1.27
        with:
          image-ref: ir-ttx-app:ci
  secret_scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run detect-secrets scan
        run: |
          pip install detect-secrets
          detect-secrets scan
  license_compliance:
    name: License Compliance Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install license-checker
        run: npm install -g license-checker
      - name: Generate license report
        run: license-checker --production --json > license-report.json
  iac_lint:
    name: IaC Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install tflint & kube-linter
        run: |
          curl -sSL https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          curl -sSL https://github.com/stackrox/kube-linter/releases/download/v0.2.5/kube-linter-linux-amd64 --output kube-linter && chmod +x kube-linter
      - name: Run tflint
        run: tflint --config .tflint.hcl
      - name: Run kube-linter
        run: ./kube-linter lint charts/ir-ttx-app
  complexity_coverage:
    name: Code Complexity & Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install radon & ESLint plugin
        run: |
          pip install radon
          npm install --save-dev eslint-plugin-complexity
      - name: Check Python complexity
        run: radon cc backend/ -s -a
      - name: Check JS complexity
        run: npm run lint -- --rule 'complexity: ["error", 10]'
  release_drafter:
    name: Release Drafter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: release-drafter/release-drafter@v5
