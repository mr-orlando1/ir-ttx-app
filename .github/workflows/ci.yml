name: "CI Pipeline"
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: {}
jobs:
  lint:
    name: Code Quality Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: pip install black flake8 isort
      - run: black --check .
      - run: isort --check-only .
      - run: flake8 backend app
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: npm ci --prefix frontend
      - run: npm run lint --prefix frontend
      - run: npm run prettier:check --prefix frontend
  pytest:
    name: Backend Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: python -m pip install --upgrade pip && pip install -r requirements.txt
      - run: pip install pytest
      - run: pytest tests/ --maxfail=1 --disable-warnings -q
  cypress:
    name: Cypress E2E Tests
    runs-on: ubuntu-latest
    needs: pytest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: npm ci --prefix frontend
      - run: npm start --prefix frontend &
      - uses: jakejarvis/wait-action@v0.1.3
        with:
          url: 'http://localhost:3000'
          timeout: '60'
      - run: npm run cy:run
  accessibility:
    name: Accessibility Audit
    runs-on: ubuntu-latest
    needs: cypress
    steps:
      - uses: actions/checkout@v3
      - run: npm install -g pa11y
      - run: pa11y http://localhost:3000 --reporter cli
  performance:
    name: Performance Audit
    runs-on: ubuntu-latest
    needs: accessibility
    steps:
      - uses: actions/checkout@v3
      - run: npm install -g @lhci/cli@0.7.x
      - run: lhci autorun --upload.target=temporary-public-storage
  integration_tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: performance
    steps:
      - uses: actions/checkout@v3
      - run: docker-compose -f docker-compose.yml up -d
      - run: sleep 15
      - run: |
          curl -fsSL http://localhost:8000/api/healthz && echo "API OK"
          npm run cy:run --prefix frontend -- --spec cypress/e2e/smoke.spec.js
      - run: docker-compose -f docker-compose.yml down
  staging_deploy:
    name: Staging Deployment
    runs-on: ubuntu-latest
    needs: integration_tests
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v3
      - uses: azure/setup-kubectl@v3
      - run: |
          kubectl config use-context staging-cluster
          helm upgrade ir-ttx charts/ir-ttx-app -f charts/ir-ttx-app/values-staging.yaml --install --set image.tag=${{ github.sha }}
  notify:
    name: Slack Notifications
    runs-on: ubuntu-latest
    needs: [pytest, cypress, staging_deploy]
    steps:
      - uses: actions/checkout@v3
      - uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          text: |
            CI Pipeline `${{ github.workflow }}` on `${{ github.ref }}` - `${{ job.status }}`.
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  release_drafter:
    name: Release Drafter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: release-drafter/release-drafter@v5